<?xml version="1.0" encoding="utf-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <title>inovasyon-48</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  

</head>
  <body id="inovasyon-48" lang="tr-TR" xml:lang="tr-TR">
		<div>
			<h2><span><st c="0">4. </st><st c="4">Yanlışlık: Proje Ne Kadar Erken Başlarsa </st><br /><st c="45">O Kadar Erken Biter</st></span></h2>
			<p><st c="64">Önceden de belirttiğimiz gibi, boş zaman yöneticiler için lanetlidir. </st><st c="135">Yeni bir proje başlatarak her duruş zamanından faydalanma eğilimi gösterirler. </st><st c="214">İnsanlar başka bir projeye dönmek zorunda oldukları için görev tamamlanamasa bile, yöneticilere göre yeni projede tamamlanmış olan her şey, daha sonra yapılmayacak olan bir şeydir. </st><st c="395">Böyle bir düşünme biçimi, şirketlerin aktif şekilde takip edebileceklerinden daha fazla proje başlatıp kaynakları seyreltmelerine yol açar.</st></p>
			<p><st c="534">Bu seyreltme tehlikelidir. </st><st c="562">Eğer bir şirket ilerlemesi için kaynaklar olmadan önce bir projeye girişirse, geliştirme süreci boyunca yavaş yavaş sendeler. </st><st c="688">Bu sorunludur çünkü ürün geliştirme çalışması oldukça kolay bozulur. </st><st c="757">Teknolojilere ve piyasaya dair varsayımlar hızlı bir şekilde köhneleşebilir. </st><st c="834">Bir proje ne kadar yavaş ilerlerse, yeniden yönlendirilmesinin gerekmesinin olasılığı o kadar artar. </st><st c="935">Hatta askeriyenin bir dalı, maliyet ve program aşmalarının bir projenin süresiyle katlanarak (dört kat) orantılı olduğunu keşfetmiştir. </st><st c="1071">Diğer bir deyişle, bir projenin orijinal programı ikiye katlandığında, maliyet ve program aşmaları 16 kat daha artıyor.</st></p>
			<p><st c="1190">Yarı mamul miktarını azaltmanın önemi, kuyruk teorisinin klasik formüllerinden birine baktığımızda belirginleşir: Küçük Yasası. </st><st c="1319">Bu yasa basitçe şunu belirtir: Ortalama olarak döngü süresi, kuyruğun boyutunun işlem yapma oranına bölümüyle orantılıdır. </st><st c="1442">Dolayısıyla, Starbucks’taki sırada önünüzde 20 kişi varsa ve kahveci dakikada beş kişiye hizmet ediyorsa, dört dakikada hizmet alacaksınızdır. </st><st c="1585">Döngü süresini, işlem yapma oranını artırarak veya yapılacak işlerin sayısını azaltarak kısaltabilirsiniz. </st><st c="1692">Çoğu durumda, tek pratik tercih ikinci seçenektir.</st></p>
			<p><st c="1742">Bazı ürün geliştiriciler için çözüm, işe başladıkları zamanki oranı kontrol etmektir. </st><st c="1829">Bunu, işin bilfiil tamamlandığı oranla eşleştirirler; süreçteki projelerin sayısını dikkatlice yönetirler; bir proje başlatıldığında tamamlanana kadar uygun şekilde kadrolaştırılmasını garantilerler; ve süregiden bir projeden kaynak çalıp yeni bir tanesine sızdırma eğilimine direnirler.</st></p>
			<h2><span><st c="2116">5. </st><st c="2120">Yanlışlık: Bir Ürüne Ne Kadar Çok Özellik Koyarsak O Kadar Çok Müşteri Beğenir</st></span></h2>
			<p><st c="2198">Ürün geliştirme ekipleri, özellik eklemenin değer yarattığına ve bunları eksiltmenin değere zarar verdiğine inanırlar. </st><st c="2318">Bu tutum, ürünlerin neden bu kadar karmaşık olduklarını da açıklar: uzaktan kumandayı kullanmak imkânsız gibidir, bilgisayarları kurmak saatler alır, arabaların o kadar çok tuşu ve düğmesi vardır ki uçak kokpitlerine benzerler, hatta artık mütevazı bir tost makinesi bile bir manüel bir de LCD sunumla birlikte gelir.</st></p>
			<p><st c="2635">Daha fazlanın daha iyi olduğuna dair inanca meydan okuyan şirketler, sadelikleriyle seçkin olan ürünler yaratır. </st><st c="2749">Danimarkalı ses ürünü, televizyon ve telefon üreticisi Bang&amp;Olufsen, müşterilerin müzik dinlemek için en uygun ayarların birleşimini bulmak üzere ille de ekolayzeri, dengeyi ve diğer kontrolleri kurcalamak istemediklerini biliyor. </st><st c="2980">Son teknoloji hoparlörleri bir şarkıyı orijinale mümkün olduğunca yakın bir şekilde yeniden üretmek için gereken ayarlamaları otomatik olarak yapar. </st><st c="3129">Kullanıcıya kalan tek şey, ses ayarı yapmaktır.</st></p>
			<p><st c="3176">Şirketlerin, daha azın daha fazla olabileceği ilkesini benimseyip uygulamalarını sağlamak zordur çünkü ürün geliştirmenin iki alanında ekstra uğraş gerektirir.</st></p>
			<p><span><st c="3336">Sorunu tanımlamak</st></span></p>
			<p><st c="3354">Geliştiricilerin çözmeye çalışacağı sorunu ayrıntılarıyla tanımlamak, inovasyon sürecinin en küçümsenen parçasıdır. </st><st c="3471">Birçok şirket bunu yapmaya çok çok az zaman ayırır. </st><st c="3523">Fakat bu aşama önemlidir çünkü ekiplerin, hedeflerinin ne olduğuna dair net bir kavrayış geliştirdikleri ve deneyler yoluyla test edilip düzeltmelerle inceltilebilecek hipotezler geliştirecekleri yerdir. </st><st c="3727">Bir ekibin gerçekten önem taşıyan birkaç özelliğe odaklanma yeteneğindeki tüm farkı bir problem ifadesinin niteliği yaratır.</st></p>
			<p><st c="3851">Walt Disney Disneyland’ı planlarken, diğer eğlence parklarında olanlardan daha fazla özellik (gezintiler, yemek çeşitleri, park yeri miktarı) eklemek için acele etmedi. </st><st c="4021">Bunun yerine daha büyük bir soru sorarak başladı: Disneyland, ziyaretçilerine büyüleyici bir müşteri deneyimini nasıl verebilir? </st><st c="4150">Elbette yanıt bir gecede çıkmadı; özenli ve ayrıntılı bir araştırma, sürekli deneyler yapma ve Disney ve müşterileri için “sihirli”nin ne anlama geldiğine dair derin içgörüler gerektirdi. </st><st c="4338">IDEO ve diğer şirketler, tahayyül edilen ürün veya hizmetin kullanılacağı bağlama kendilerini tamamen soktukları aşamalar belirlediler. </st><st c="4474">Geliştiricileri piyasaların ilgisi dahilinde olan her şeyi okudu, gelecekteki kullanıcıları gözlemleyip onlarla röportaj yaptı, yeni ürünle rekabet edebilecek sunuları araştırdı ve öğrendikleri her şeyi resimler, modeller ve diyagramlar şeklinde sentezlediler. </st><st c="4735">Sonuç, tekrarlayan geliştirme süreci boyunca test edilen, iyileştirilen veya terk edilen müşterilere dair derin içgörülerdi.</st></p>
			<p><span><st c="4859">Neyin saklanacağını veya dahil edilmeyeceğini belirlemek</st></span></p>
			<p><st c="4916">Ekipler genelde, görevdeşlerini ve yönetimi büyüleyen parlak teknik çözümler üreterek şov yapmak için ayartılır. </st><st c="5030">Fakat çoğu kez müşteriler sadece, çaba sarf etmeden çalışan bir ürünü tercih ederler. </st><st c="5116">Müşterinin bakış açısına göre en iyi çözümler, bir sorunu en basit şekilde çözer ve geliştiricilerin onca gururlandıkları işleri gizler.</st></p>
			<p><st c="5252">Bunu anlayan şirketlerden biri Apple’dır. </st><st c="5295">Apple pek çok şeyiyle—yenilikçi ürünleri, şık tasarımları ve kavrayışlı pazarlamasıyla—tanınır ama belki de en büyük gücü, bir sorunun kalbine inebilme yeteneğidir. </st><st c="5460">Merhum Steve Jobs’un bir zamanlar açıkladığı gibi, “Bir soruna bakmaya başladığınızda ve sorun gerçekten basit göründüğünde, sorunun karmaşıklığını gerçekten anlamamışsınız demektir. </st><st c="5643">Üstelik çözümleriniz fazlasıyla basitleştirilmiştir. </st><st c="5696">Ardından sorunun içine girer ve onun gerçekten de karmaşık olduğunu görürsünüz. </st><st c="5776">Tüm bu sarmal çözümleri ortaya atarsınız… Çoğu insanın durduğu yer burasıdır.” Apple’ın değil. </st><st c="5871">Apple gayretle çalışmaya devam eder. </st><st c="5908">Jobs, “Gerçekten müthiş olan insan ilerlemeye devam edecektir,” der, “…ve sorunun altta yatan esasının anahtarını bulup işe yarayan güzel, seçkin bir çözüm ortaya atacaktır.”</st></p>
			<p><st c="6082">Hangi özelliklerin dahil edilmeyeceğini belirlemek, hangilerinin içerileceğini bulmak kadar—hatta bundan daha fazla—önemlidir. </st><st c="6210">Ne yazık ki birçok şirket, yenilikçi olma uğraşı içinde olası her zili ilave edip müşteriler için değeri ve kullanım kolaylığı gibi önemli unsurları tam olarak göz önünde bulundurmadan çalarlar. </st><st c="6405">Böyle şirketler planlanan işlevselliklerden bazılarını dahil etmediklerinde, tipik olarak bunun nedeni maliyetleri kesmelerinin gerekmesi, programın gerisinde kalmaları veya ekibin başka bir nedenden dolayı başarılı olmasıdır.</st></p>
			<p><st c="6631">Bunun yerine yöneticiler, öngörülen herhangi bir özelliğin silinmesinin belli bir ürünü iyileştirip iyileştiremeyeceğini ve ekibin, genel müşteri deneyimini hakikaten yükseltebilecek şeylere yoğunlaşmasına imkân verip veremeyeceğini bulmaya odaklanmalıdır. </st><st c="6889">Bu, sözde gerekliliklerin hepsine hipotez olarak davranılarak ve bunu müstakbel müşteriler üzerinde küçük, hızlı deneylerle test ederek tespit edilebilir.</st></p>
			<p><st c="7043">Geliştirme ekipleri genellikle, ürünlerinin, daha fazla hiçbir özellik eklenemediği zaman bittiğini varsayar. </st><st c="7154">Belki de mantıkları tam tersi olmalıdır: ürünler, daha fazla hiçbir özellik çıkarılamadığı zaman mükemmelliğe en yakın haldedir. </st><st c="7283">Leonardo da Vinci’nin bir zamanlar söylediği gibi, “Sadelik, karmaşıklığın zirvesidir.”</st></p>
			<h2><span><st c="7370">6. </st><st c="7374">Yanlışlık: İlk Seferde Doğru Yaparsak Daha Başarılı Oluruz</st></span></h2>
			<p><st c="7432">Birçok ürün geliştirme projesi bütçe, program ve teknik performans amaçlarını karşılamada başarısız olur. </st><st c="7539">Şüphesiz ki kötü planlama, katı süreçler ve zayıf yönetimin de oynadıkları bir rol vardır.  </st><st c="7630">Ama genellikle göz ardı edilen bir diğer neden, yöneticinin ekiplerinden beklediği “ilk seferde doğru yapma” talebidir. </st><st c="7750">İlk atışta başarıyı beklemek, ekipleri, müşteriler halihazırda mevcut olana göre pek bir iyileşme gibi algılamasa bile en az riskli sonuçlara yönlendirir. </st><st c="7905">Daha kötüsü, ekiplerin müşterilerin sorunlarına yenilikçi çözüm takiplerine dair çok az teşvikleri olur.</st></p>
			<p><st c="8009">Hata yapmaktan kaçınmak için ekipler, her aşamanın (belirleme, tasarlama, kurma, test etme, ölçme, piyasaya sürme) denetim “geçitleri”nde dikkatli bir şekilde gözlendiği çizgisel bir süreç takip ederler. </st><st c="8214">Bir sonraki aşamadaki çalışma, proje geçitten geçmeden önce başlayamaz. </st><st c="8286">Proje çizgi boyunca ilerledikten sonra önemli taahhütler verilir ve yeni içgörülere yanıt verme maliyeti büyüklük sıralarına göre artar. </st><st c="8423">Son aşamalardaki başarılı testler kutlanır ve ne kadar değerli olursa olsun sürprizler engel olarak düşünülür. </st><st c="8534">Ne yazık ki böylesi bir çizgisel süreç akışı proje aşırılıklarına neden olabilir çünkü test geribildirimi gecikir, ekipler kötü fikirlere olması gerekenden uzun bir süre asılmıştır ve sorunlar, onları çözmek pahalı olana dek ortaya çıkarılmamıştır.</st></p>
			<p><st c="8782">“İlk seferde yanlış yapmaya” karşı hoşgörülü olmak, insanlar hızlı ve sık sık tekrarladıkları ve başarısızlıklarından hemen ders çıkardıkları sürece daha iyi bir strateji olabilir. </st><st c="8964">Simülasyonda ve hızlı prototipleştirme teknolojisindeki ilerlemeler bu şekilde faaliyet göstermeyi çok daha kolay ve ucuz hale getirmiştir.</st></p>
			<p><st c="9103">Müşteriyle entegre devreler tasarlayan 391 ekiple yaptığımız bir çalışmada bulduklarımızı göz önünde bulundurun. </st><st c="9217">Tekrarlayan bir yaklaşım benimseyen ve erkenden ve sık sık testler yürüten ekipler, yol boyunca daha fazla hata yaptılar. </st><st c="9339">Fakat düşük maliyetli prototip teknolojileri kullandıkları için tasarımlarını ilk seferde hemen almaya çalışan ekiplerin (gereken zaman ve çaba bağlamında) performansını aştılar. </st><st c="9518">Yüksek prototip maliyetleriyle karşılaşan ekipler teknik özelliklere, geliştirmeye ve sağlamaya daha fazla çaba yatırımı yaptılar. </st><st c="9649">Tekrarlarını sürecin ilerleyen kısımlarında ve çok az yaptıkları için kritik sorunların keşfini ertelediler.</st></p>
		</div>
	<div id="charCountTotal" value="9757"></div></body>
</html>
