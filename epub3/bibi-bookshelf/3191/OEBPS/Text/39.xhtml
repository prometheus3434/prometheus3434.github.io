<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title></title>
  <link href="../Styles/main.css" rel="stylesheet" type="text/css" />
</head>

<body>
  <h3>39. BÖLÜM<br />
  <br />
  <span><img alt="" src="../Images/main-41.png" /></span><br />
  <br />
  Bilgisayarlar Düşünebilir mi?<br />
  ALAN TURING VE JOHN SEARLE</h3>

  <p>Bir odada oturuyorsunuz. Odaya açılan bir kapı, kapıda da bir mektup yarığı var. Ara sıra, üzerine anlamsız çizgiler çizilmiş bir karton parçası kapıdan sokulup paspasınıza düşüyor. Sizin göreviniz, odadaki masanın üzerinde duran bir kitabın içinde o anlamsız çizgiyi arayıp bulmak. Her bir anlamsız çizgi, kitaptaki başka bir sembolle eşleşiyor. Kitapta o anlamsız çizgiyi bulmalı, onunla eşleşen sembole bakmalı ve sonrasında, odadaki pakette üzerinde eşleşen sembolün bulunduğu kartı bulmalısınız. Sonra da dikkatli bir şekilde, bu kartı kapıdaki yarıktan dışarı itmelisiniz. İşte bu! Bunu bir süre yaptıktan sonra neler olduğunu merak edersiniz.</p>

  <p>Amerikalı filozof John Searle (1932) tarafından bulunan, Çin Odası düşünce deneyidir bu. Bir bilgisayarın, düşünebiliyor gibi görünmesine rağmen, gerçekte düşünemediğini göstermek üzere tasarlanmış hayali bir durumdur. Burada olup biteni anlamak için öncelikle Turing Testini anlamamız gerekiyor.</p>

  <p>Alan Turing (1912-54), modern bilgisayarın yaratılmasında rolü olan Cambridgeli seçkin bir matematikçiydi. İkinci Dünya Savaşı sırasında İngiltere'de Bletchley Parkta geliştirilen, ayrıntılı ve yoğun hesaplamalar yapan makinesi, Alman denizaltı komutanları tarafından kullanılan "Enigma" kodlarını kırmıştı. Müttefikler böylece mesajların içeriğini çözebilmiş ve Nazilerin planlarını öğrenebilmişlerdi.</p>

  <p>Bilgisayarların bir gün kodları kırmaktan daha fazlasını yapacağı ve gerçekten zeki olabilecekleri fikri Turing'in ilgisini çekmiş ve 1950 yılında bu tarz bilgisayarların geçebileceği bir test önermişti. Bu, daha sonra, yapay zekâyı sorgulayan Turing Testi olarak bilinecekti, ancak Turing, onu başta Taklit Oyunu diye adlandırmıştı. Beynin ilginç yönü aslında onun soğuk püre kıvamında olması değildir, inancından gelir bu. Önemli olan kafatasından çıkarıldığında titremeye devam etmesi ya da gri olması değil, işlevidir. Bilgisayarlar sert ve elektronik parçalardan yapılmış olabilir; fakat yine de beynin yaptığı pek çok şeyi yapabilirler.</p>

  <p>Bir kişinin zeki olup olmadığına karar verirken, beynini açıp nöron hareketlerini izlemektense, sorulara verdiği cevapları temel alırız. Dolayısıyla bilgisayarlar hakkında karar verirken de onların nasıl oluşturuldukları yerine, harici kanıtlara odaklanmamız adil olur. Kan ve sinirlere ya da kablolar ve iletkenlere değil, veri girdi ve çıktılarına bakmalıyız. Turing şöyle bir şey önermişti. Bir odada testi yapan kişi ekrana bir konuşma yazmaktadır. Ekran aracılığıyla farklı bir odada oturan bir insanla mı yoksa kendi cevaplarını üreten bir bilgisayarla mı konuştuğunu bilmez. Konuşma sırasında testi yapan kişi konuştuğunun insanın olup olmadığını söyleyemezse, bilgisayar Turing Testini geçecektir. Bilgisayar bu testi geçerse, o zaman onun zeki olduğunu, sadece mecazi anlamda zeki değil, bir insanın sahip olabileceği türden bir zekâsı olduğunu söylemek mantıklı olacaktır.</p>

  <p>Searle'ün Çin Odası örneği —birkaç kart üzerindeki anlamsız çizgiler senaryosu— bir bilgisayar yapay zekâya yönelik Turing testini geçmiş olsa bile, bunun onun gerçekten de her şeyi anladığını kanıtlamayacağını göstermeyi amaçlar. Kapıdaki mektup bölmesinden garip sembollerin geldiği bir odada olduğunuzu ve diğer sembolleri bölmeden dışarıya geri gönderdiğinizi, elinizde de size kılavuzluk eden bir kitap olduğunu düşünün. Bu sizin için anlamsız bir görevdir ve neden bunu yaptığınıza dair hiçbir fikriniz yoktur. Gelgelelim farkına varmaksızın soruları Çince cevaplarsınız. Sadece İngilizce konuşuyorsunuz ve hiç Çince bilmiyorsunuz. Oysa, içeriye gelen işaretler Çince sorular ve dışarıya verdiğiniz işaretler de bu sorulara verilen mantıklı cevaplar. İçinde bulunduğunuz Çin Odası, Taklit Oyununu kazanır. Verdiğiniz cevaplar, dışarıdaki birini, hakkında konuştuğunuz şeyi gerçekten de anladığınızı düşündürtmek suretiyle yanıltacaktır. Dolayısıyla odanın içinde siz de tartışılan şeyin ne olduğundan tamamıyla habersiz olduğunuz için, Turing Testini geçen bir bilgisayar da zorunlu olarak zeki değildir.</p>

  <p>Searle, bilgisayarların Çin Odasındaki biri gibi olduğunu düşünür: Gerçekten zekâya sahip değildirler ve gerçekten düşünemezler. Bütün yaptıkları, onları oluşturanların kendilerine programlamış oldukları kurallar çerçevesinde sembolleri dağıtmaktır. Kullandıkları işlemler bir yazılıma yerleştirilmiştir. Gelgelelim bu, bir şeyi gerçekten anlamaktan ya da gerçek bir zekâya sahip olmaktan çok farklıdır. Bunu ortaya koymanın başka bir yolu, bilgisayar programlayan insanların ona bir <i>sentaks</i> (sözdizimi) eklemeleridir. Bunlar, sembollerin işleneceği doğru sırayla ilgili kuralları sağlar. Fakat bunu <i>semantik</i>le (anlam-bilim) vermezler: Sembollere anlamlar yüklememişlerdir. İnsanlar, konuştuğu zaman bir şeylere <i>anlam</i> verirler, düşünceleri dünyayla çeşitli yönlerden ilişkilidir. Bir şeylere anlam yüklüyor gibi görünen bilgisayarlar ise biraz da papağanlar gibi insan düşüncesini taklit eder. Papağan konuşmayı taklit edebilmesine rağmen söylediği şeyin ne ifade ettiğini asla gerçekten anlamaz. Benzer şekilde Searle'e göre bilgisayarlar, herhangi bir şeyi gerçekten ne anlayabilir ne de onun hakkında düşünebilir. Yalnızca sentakstan yola çıkarak semantiğe erişemezsiniz.</p>

  <p>Searle'ün düşünce deneyine yönelik eleştirilerden biri, deneyin odadaki kişinin olan biteni anlayıp anlamadığı sorusuna odaklanmasıydı. Ama bu bir hatadır. Kişi, bütün sistemin sadece bir parçasıdır. Kişi neler olup bittiğini anlamasa bile, sistemin bütünü (oda, şifre kitabı, semboller vb) belki anlayabilir. Searle'ün bu itiraza cevabı, düşünce deneyini değiştirmek oldu. Odanın içerisinde sembolleri oradan oraya götüren bir kişi hayal etmek yerine, bu kişinin kural kitabının bütününü ezberlediğini ve dışarıda bir alanın ortasında, uygun sembol kartlarını geri verdiğini hayal edin. Bu kişi Çince sorulan sorulara doğru cevap veriyor olsa da tek tek soruları hâlâ anlamayacaktır. Anlamak sadece doğru cevaplar vermekten fazlasını içerir.</p>

  <p>Gerçi bazı filozoflar, insan zihninin bir bilgisayar programı gibi <i>olduğuna</i> ikna olmuş durumdadır. Bilgisayarların gerçekten düşünebildiklerine ve düşündüklerine inanırlar. Eğer haklılarsa, o zaman belki de bir gün, insan beyninin bilgisayara aktarılması mümkün olacaktır. Zihniniz bir programsa, şu anda kafanızın içerisindeki beyin dokusunun vıcık vıcık kütlesinde işliyor olması, onun gelecekte parlak büyük bir bilgisayarda işleyemeyeceği anlamına gelmez. Süper zeki bilgisayarların yardımıyla birisi, zihninizin oluşturduğu milyonlarca işlevsel bağlantının bir haritasını çıkarabilirse, o zaman bir gün ölümden kurtulmak da mümkün olabilir. Beyniniz bir bilgisayara yüklenebilir ve böylece vücudunuz gömüldükten ya da yakıldıktan çok sonra bile çalışmaya devam edebilir. Bunun iyi bir varoluş biçimi olup olmayacağı başka bir meseledir. Eğer Searle haklıysa, yüklenen zihin, görünüşte bilinçli olduğunu gösteren tepkiler verse de, şu an sahip olduğunuz türden bir bilince sahip olacağının garantisi yoktur.</p>

  <p>Altmış yıl kadar önce yazan Turing, bilgisayarların düşünebildiğine çoktan ikna olmuştu. Eğer haklıysa, yakın bir gelecekte onları felsefe yaparken bulabiliriz. Bu, bilgisayarların zihinlerimizin ölümden sonra yaşamasına izin vermesinden daha yakın bir ihtimaldir. Belki de bir gün bilgisayarlar, nasıl yaşamamız gerektiğine ve gerçekliğin doğasına dair temel sorular —filozofların binlerce yıldır boğuştuğu türde sorular— hakkında ilginç şeyler bile söyleyebilirler. Ama şimdilik bu alanlardaki düşüncelerimizi netleştirmek için kanlı canlı filozoflara güvenmemiz gerek. Peter Singer, bu filozoflar arasında en etkili ve tartışmalı olanlardan biridir.</p>
</body>
</html>
